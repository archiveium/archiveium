name: Build Docker Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
#   lint:
#     name: Lint
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3
#       - name: Use Node.js 16.x
#         uses: actions/setup-node@v3
#         with:
#           node-version: 16.x
#           cache: 'npm'
#       - run: npm ci
#       - run: npm run lint

  build:
    name: Build
    # needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  release:
    name: Release
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - run: npm ci
      - env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          npm run release

  docker:
    name: Build & Deploy Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set Release Version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "RELEASE_VERSION=$version" >> $GITHUB_ENV
      - name: Push to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: |-
              linux/amd64
              linux/arm64
          file: Dockerfile
          push: true
          tags: archiveium/frontend:${{ env.RELEASE_VERSION }},archiveium/frontend:latest

  trigger:
    name: Update deployer
    needs: docker
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - name: Get Release Version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "RELEASE_VERSION=$version" >> $GITHUB_ENV
      - name: Trigger Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: 'archiveium',
              repo: 'deployer',
              workflow_id: 'main.yml',
              ref: 'main',
              inputs: {
                frontendVersion: '${{ env.RELEASE_VERSION }}'
              },
            })